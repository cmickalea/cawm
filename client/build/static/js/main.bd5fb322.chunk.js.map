{"version":3,"sources":["core/Layout.js","config.js","auth/index.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/CartHelper.js","core/Card.js","core/Home.js","core/Menu.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","user/AdminDashboard.js","auth/AdminRoute.js","admin/apiAdmin.js","admin/Orders.js","admin/AddCategory.js","admin/AddProduct.js","core/Checkbox.js","core/Radiobox.js","core/FixedPrices.js","core/Shop.js","core/Product.js","core/CartCard.js","core/Checkout.js","core/Cart.js","core/CheckoutForm.js","core/Payment.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","Routes.js","index.js"],"names":["Layout","title","description","className","children","API","isAuthenticated","window","localStorage","getItem","JSON","parse","Signup","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","fetch","method","headers","Accept","body","stringify","then","response","json","catch","err","console","log","data","style","display","to","onChange","type","onClick","Signin","loading","redirectToReferrer","signin","next","setItem","authenticate","role","getProducts","sortBy","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","addItem","cart","push","count","Array","from","Set","map","p","id","find","updateItem","productId","product","i","removeItem","splice","Card","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","setCount","addToCart","shouldRedirect","substring","price","showViewButton","showAddToCart","showRemoveButton","showCartUpdateOptions","Home","setProductsBySell","setProductsByArrival","setError","useEffect","backgroundColor","fontSize","isActive","history","path","location","pathname","color","withRouter","length","cursor","signout","PrivateRoute","Component","component","rest","render","props","state","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","h","products","key","purchaseHistory","AdminDashboard","AdminRoute","getCategories","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","e","orderId","status","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","transaction_id","amount","createdAt","address","pIndex","padding","border","AddCategory","setName","setSuccess","category","createCategory","showSuccess","showError","onSubmit","autoFocus","required","AddProduct","categories","shipping","quantity","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","c","Checkbox","handleFilters","checked","setChecked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","Radiobox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filteredBy","priceValues","handlePrice","parseInt","Product","setProduct","loadSingleProduct","read","match","params","CartCard","class","fontFamily","Checkout","clientToken","instance","setData","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","processPayment","createOrderData","transaction","order","createOrder","message","showDropIn","onBlur","placeholder","options","authorization","onInstance","Cart","items","setItems","width","margin","marginLeft","showItems","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","a","createPaymentMethod","card","getElement","CardElement","billing_details","result","handlePaymentMethodResult","payment_method_id","paymentMethod","serverResponse","handleServerResponse","disabled","stripePromise","loadStripe","Payment","Profile","update","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","updateProduct","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bd5fb322.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Layout = ({\n    title = \"Title\",\n    description = \"Description\",\n    className,\n    children }) => {\n    return (\n        <div>\n            <div className=\"jumbotron\">\n                <h2>{title}</h2>\n                <p className=\"lead\">{description}</p>\n            </div>\n            <div className={className}>{children}</div>\n        </div>\n    )\n};\n\nexport default Layout;\n","export const AP = process.env.REACT_APP_API_URL;\nexport const API = \"http://localhost:8000/api\";\n","import {API} from \"../config\";\n\nexport const signup = (user) => {\n    //console.log(name, email, password);\n    return fetch(`${API}/signup`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    }).then(response => {\n        return response.json()\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const signin = (user) => {\n    //console.log(name, email, password);\n    return fetch(`${API}/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    }).then(response => {\n        return response.json()\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const authenticate = (data, next) => {\n  if(typeof window !== \"undefined\"){\n      localStorage.setItem(\"jwt\", JSON.stringify(data));\n      next();\n  }\n};\n\nexport const signout = next => {\n    if(typeof window !== \"undefined\"){\n        localStorage.removeItem(\"jwt\");\n        next();\n        return fetch(`${API}/signout`, {\n            method: \"GET\",\n        })\n            .then(response => {\n                console.log(\"signout\", response);\n            })\n            .catch(err => console.log(err));\n    }\n};\n\nexport const isAuthenticated = () => {\n    // ensure there is a jwt\n    if(typeof window == \"undefined\"){\n        return false;\n    }\n    //parse jwt to JSON\n    if(localStorage.getItem(\"jwt\")){\n        return JSON.parse(localStorage.getItem(\"jwt\"))\n    } else {\n        return false;\n    }\n}\n","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport {signup} from \"../auth\";\n\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: false,\n        success: false\n    });\n\n    const {name, email, password, success, error} = values;\n\n    function handleChange(name) {\n        return function(event) {\n            setValues({ ...values, error: false, [name]: event.target.value });\n        };\n    }\n\n    const clickSubmit = (event) => {\n        event.preventDefault();\n        setValues({...values, error: false});\n        signup({ name, email, password })\n        .then(data => {\n            if(data.error){\n                setValues({...values, error: data.error, success: false})\n            }else {\n                setValues({\n                    ...values,\n                    name: \"\",\n                    email: \"\",\n                    password: \"\",\n                    error: \"\",\n                    success: true\n                })\n            }\n        })\n    };\n\n    const signupForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange = {handleChange(\"name\")}\n                       type=\"text\"\n                       className=\"form-control\"\n                       value={name}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange = {handleChange(\"email\")}\n                       type=\"email\"\n                       className=\"form-control\"\n                       value={email}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange = {handleChange(\"password\")}\n                       type=\"password\"\n                       className=\"form-control\"\n                       value={password}\n                />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert info\" style={{display: success ? \"\" : \"none\"}}>\n            New account created! <Link to=\"/signin\">Sign in</Link>\n        </div>\n    );\n\n    return (\n        <Layout title= \"Sign Up\"\n                description=\"Join the CAWM Fam\"\n                className=\"container col-md-8 offset-md-2\">\n\n            {showSuccess()}\n            {showError()}\n            {signupForm()}\n        </Layout>\n    )\n};\n\nexport default Signup;\n","import React, {useState} from \"react\";\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\n\nconst Signin = () => {\n    const [values, setValues] = useState({\n        email: \"kash@hotboys.com\",\n        password: \"876kash\",\n        error: false,\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const { email, password, error, loading, redirectToReferrer} = values;\n    const { user } = isAuthenticated();\n\n    function handleChange(name) {\n        return function(event) {\n            setValues({ ...values, error: false, [name]: event.target.value });\n        };\n    }\n\n    const clickSubmit = (event) => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        signin({ email, password })\n            .then(data => {\n                if(data.error){\n                    setValues({...values, error: data.error, loading: false})\n                }else {\n                    authenticate(data, () => {\n                        setValues({\n                            ...values,\n                            redirectToReferrer: true\n                        });\n                    });\n                }\n            })\n    };\n\n    const signupForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange = {handleChange(\"email\")}\n                       type=\"email\"\n                       className=\"form-control\"\n                       value={email}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange = {handleChange(\"password\")}\n                       type=\"password\"\n                       className=\"form-control\"\n                       value={password}\n                />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\n            {error}\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-info\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if(redirectToReferrer){\n            if(user && user.role === 1){\n                return <Redirect to=\"/admin/dashboard\" />;\n            } else {\n                return <Redirect to=\"/user/dashboard\" />;\n            }\n        }\n\n        if(isAuthenticated()){\n            return <Redirect to=\"/\" />\n        }\n    }\n\n    return (\n        <Layout title= \"Sign In\"\n                description=\"Sign in the CAWM Fam\"\n                className=\"container col-md-8 offset-md-2\">\n\n            {showLoading()}\n            {showError()}\n            {signupForm()}\n            {redirectUser()}\n        </Layout>\n    )\n};\n\nexport default Signin;\n","import { API} from \"../config\";\n\nexport const getProducts = (sortBy) => {\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: \"GET\"\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\n//fetch products based on filters\nexport const getFilteredProducts = ( skip, limit, filters = {} ) => {\n    const data = { limit, skip, filters };\n    return fetch(`${API}/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        return response.json()\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const read = (productId) => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({order: createOrderData})\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n","import React from \"react\";\nimport { API } from \"../config\";\n\nconst ShowImage = ({ item, url }) => (\n    <div className=\"product-img\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"mb-3\"\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        />\n    </div>\n);\n\nexport default ShowImage;\n","export const addItem = (item, next) => {\n    let cart = [];\n    if(typeof window !== \"undefined\"){\n        if(localStorage.getItem(\"cart\")){\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        })\n\n        // creates new array of cart items and new Set removes the duplicates\n        // new Set only allows unique values\n        // take the array of product ids and re-map it to return the actual product\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        })\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n        next();\n    }\n}\n\n\nexport const itemTotal = () => {\n    if(typeof window !== \"undefined\"){\n        if(localStorage.getItem(\"cart\")){\n            return JSON.parse(localStorage.getItem(\"cart\")).length\n        }\n    }\n    return 0;\n}\n\nexport const getCart = () => {\n    if(typeof window !== \"undefined\"){\n        if(localStorage.getItem(\"cart\")){\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return [];\n}\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if(typeof window !== \"undefined\"){\n        if(localStorage.getItem(\"cart\")){\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\n        }\n\n        cart.map((product,i) => {\n            if(product._id === productId){\n                cart[i].count = count\n            }\n        })\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n}\n\n\nexport const removeItem = (productId) => {\n    let cart = [];\n    if(typeof window !== \"undefined\"){\n        if(localStorage.getItem(\"cart\")){\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\n        }\n\n        cart.map((product,i) => {\n            if(product._id === productId){\n                cart.splice(i, 1)\n            }\n        })\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n    return cart;\n}\n\n\nexport const emptyCart = next => {\n  if(typeof window !== \"undefined\"){\n    localStorage.removeItem(\"cart\");\n    next();\n  }\n};\n","import React, {useState} from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ShowImage from \"./ShowImage\";\nimport { addItem, updateItem, removeItem } from \"./CartHelper\";\n\nconst Card = ({\n                  product,\n                  showViewProductButton = true,\n                  showAddToCartButton = true,\n                  cartUpdate = false,\n                  showRemoveProductButton = false,\n                  setRun = f => f, //default value of function\n                  run = undefined\n}) => {\n    const [redirect, setRedirect] = useState(false);\n    const [count, setCount] = useState(product.count);\n\n    const showViewButton = (showViewProductButton) => {\n        return (\n            showViewProductButton && (\n                <Link to={`/product/${product._id}`} className=\"mr-2\">\n                <button className=\"btn btn-outline-primary mt-2 mb-2\">\n                    View Product\n                </button>\n                </Link>\n            )\n        )\n    }\n\n    const addToCart = () => {\n        addItem(product, () => {\n            setRedirect(true);\n        })\n    }\n\n    const shouldRedirect = redirect => {\n        if(redirect){\n            return <Redirect to=\"/cart\" />\n        }\n    }\n\n    const showAddToCart = (showAddToCartButton) => {\n        return  showAddToCartButton && (\n            <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\n                Add to Cart\n            </button>\n        )\n    }\n\n    const showRemoveButton = showRemoveProductButton => {\n        return (\n            showRemoveProductButton && (\n            <button\n                onClick={() => {\n                    removeItem(product._id)\n                    setRun(!run); //run useEffect in parent Cart\n                }}\n                className=\"btn btn-outline-danger mt-2 mb-2\"\n            >\n                Remove Product\n            </button>\n            )\n        );\n    };\n\n    const handleChange = productId => event => {\n        setRun(!run)\n        setCount(event.target.value < 1 ? 1 : event.target.value);\n        if(event.target.value >= 1){\n            updateItem(productId, event.target.value)\n        }\n    }\n\n    const showCartUpdateOptions = cartUpdate => {\n        return cartUpdate &&\n            <div>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Quantity\n                        </span>\n                    </div>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        value={ count }\n                        onChange={handleChange(product._id)} />\n                </div>\n            </div>\n    }\n\n\n    return (\n        // <div className={\"col-4 mb-3\"}>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    {product.name}\n                </div>\n                <div className=\"card-body\">\n                    {shouldRedirect(redirect)}\n                    <ShowImage item={product} url=\"products\" />\n                    <p>{product.description.substring(0, 100)}</p>\n                    <p>${product.price}</p>\n                    {showViewButton(showViewProductButton)}\n                    {showAddToCart(showAddToCartButton)}\n                    {showRemoveButton(showRemoveProductButton)}\n                    {showCartUpdateOptions(cartUpdate)}\n                </div>\n            </div>\n\n        // </div>\n    )\n}\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport Layout from \"./Layout\";\nimport { getProducts } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts(\"sold\").then(data => {\n            if(data.error){\n                setError(data.error)\n            } else {\n                setProductsBySell(data)\n            }\n        })\n    }\n\n    const loadProductsByArrival = () => {\n        getProducts(\"createdAt\").then(data => {\n            if(data.error){\n                setError(data.error)\n            } else {\n                setProductsByArrival(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, [])\n\n    return (\n      <div className=\"col-8 ml-4 mt-4 p-4\" style={{backgroundColor: \"#856600\"}}>\n        <h1 style={{fontSize: \"100px\"}}>STAY C.A.W.M</h1>\n        <h4 style={{ fontSize: \"50px\"}}> Children Always Want More</h4>\n      </div>\n    )\n}\n\nexport default Home;\n","import React, { Fragment} from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { signout, isAuthenticated } from \"../auth\";\nimport { itemTotal } from \"./CartHelper\";\nimport \"../style.css\";\n\nconst isActive = (history, path) => {\n    if(history.location.pathname === path){\n        return {\n            color: \"#333\"\n        };\n    } else {\n        return {\n            color: \"#856600\"\n        };\n    }\n};\n\nconst Menu = ({history}) => {\n  return (\n      <div>\n          <ul className=\"nav nav-tabs navbar-light bg-light p-2\">\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" style={isActive(history, \"/\")} to=\"/\">Home</Link>\n              </li>\n\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" style={isActive(history, \"/shop\")} to=\"/shop\">Shop</Link>\n              </li>\n\n              <li className=\"nav-item\">\n                  <Link\n                      className=\"nav-link\"\n                      style={isActive(history, \"/cart\")}\n                      to=\"/cart\"\n                  >\n                      Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup>\n                  </Link>\n              </li>\n\n              {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                  <li className=\"nav-item\">\n                      <Link className=\"nav-link\" style={isActive(history, \"/user/dashboard\")} to=\"/user/dashboard\">Dashboard</Link>\n                  </li>\n              )}\n\n              {isAuthenticated() && isAuthenticated().user.role === 1 && (\n              <li className=\"nav-item\">\n                  <Link className=\"nav-link\" style={isActive(history, \"/admin/dashboard\")} to=\"/admin/dashboard\">Dashboard</Link>\n              </li>\n              )}\n\n              {!isAuthenticated() && (\n                  <Fragment>\n                      <li>\n                          <Link className=\"nav-link\" style={isActive(history, \"/signin\")} to=\"/signin\">Signin</Link>\n                      </li>\n\n                      <li>\n                          <Link className=\"nav-link\" style={isActive(history, \"/signup\")} to=\"/signup\">Signup</Link>\n                      </li>\n                  </Fragment>\n              )}\n\n              {isAuthenticated() && (\n                  <li>\n                  <span className=\"nav-link\"\n                        style={{cursor: \"pointer\", color:\"#856600\"}}\n                        onClick={() =>\n                            signout(() => {\n                                history.push(\"/\");\n                            })\n                        }>Signout</span>\n                  </li>\n              )}\n          </ul>\n      </div>\n  )\n};\n\nexport default withRouter(Menu);\n","import React from \"react\";\nimport { Route, Redirect} from \"react-router-dom\";\nimport { isAuthenticated} from \"./index\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    //if user is authenticated then return component with props else redirect to login\n    <Route {...rest} render={props => isAuthenticated() ? (\n        <Component {...props} />\n    ) : (\n        <Redirect\n            to={{\n                pathname: \"/signin\",\n                state: {from: props.location}}} />\n    )}\n    />\n)\n\nexport default PrivateRoute;\n","import React, {useState, useEffect} from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated} from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\n\n\nconst Dashboard = () => {\n    const [history, setHistory] = useState([]);\n\n    const {user: {_id, name, email, role}} = isAuthenticated();\n    const token = isAuthenticated().token;\n\n    const init = (userId, token) => {\n      getPurchaseHistory(userId, token).then(data => {\n        if(data.error){\n          console.log(data.error)\n        } else {\n          setHistory(data)\n        }\n      });\n    }\n\n\n\n    useEffect(() => {\n      init(_id, token)\n    }, [])\n\n    const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\"> My Cart</Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}> Update Profile </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\"> User info</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">{role === 1 ? \"admin\" : \"registered user\" }</li>\n                </ul>\n            </div>\n        )\n    }\n\n    const purchaseHistory = history => {\n    return (\n        <div className=\"card mb-5\">\n            <h3 className=\"card-header\">Purchase history</h3>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                    {history.map((h, i) => {\n                        return (\n                            <div>\n                                <hr />\n                                {h.products.map((p, i) => {\n                                    return (\n                                        <div key={i}>\n                                            <h6>Product name: {p.name}</h6>\n                                            <h6>Product price: ${p.price}</h6>\n                                            <h6>\n                                                Purchased date:{\" \"}\n                                            </h6>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        );\n                    })}\n                </li>\n            </ul>\n        </div>\n    );\n};\n\n    return (\n        <Layout title=\"Dashboard\"\n                description={`hey ${name}`}\n                className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    {userLinks()}\n                </div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default Dashboard;\n","import { API } from \"../config\";\n\nexport const read = (userId, token) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\nexport const updateUser = (user, next) => {\n  if(typeof window !== \"undefined\"){\n    if(localStorage.getItem(\"jwt\")){\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = user;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\n\n\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(`${API}/orders/by/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n","import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated} from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminDashboard = () => {\n\n    const {user: {_id, name, email, role}} = isAuthenticated();\n\n    const adminLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">Admin Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/create/category\"> Create Category</Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/create/product\"> Create Product </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/admin/orders\"> View Orders </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/admin/products\"> Manage Products </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    const adminInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\"> User info</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">{role === 1 ? \"admin\" : \"registered user\" }</li>\n                </ul>\n            </div>\n        )\n    }\n\n\n    return (\n        <Layout title=\"Dashboard\"\n                description={`Admin: ${name}`}\n                className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{adminLinks()}</div>\n                <div className=\"col-9\">{adminInfo()}</div>\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default AdminDashboard;\n","import React from \"react\";\nimport { Route, Redirect} from \"react-router-dom\";\nimport { isAuthenticated} from \"./index\";\n\nconst AdminRoute = ({component: Component, ...rest}) => (\n    //if user is authenticated then return component with props else redirect to login\n    <Route {...rest} render={props => isAuthenticated() && isAuthenticated().user.role === 1 ? (\n        <Component {...props} />\n    ) : (\n        <Redirect\n            to={{\n                pathname: \"/signin\",\n                state: {from: props.location}}} />\n    )}\n    />\n)\n\nexport default AdminRoute;\n","import {API} from \"../config\";\n\nexport const createCategory = (userId, token, category) => {\n    //console.log(name, email, password);\n    return fetch(`${API}/category/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    }).then(response => {\n        return response.json()\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const createProduct = (userId, token, product) => {\n    //console.log(name, email, password);\n    return fetch(`${API}/product/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    }).then(response => {\n        return response.json()\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({status, orderId})\n    }).then(response => {\n        return response.json();\n    }).catch(err => {\n        console.log(err);\n    })\n};\n\n\nexport const getProducts = (userId, token) => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: \"GET\",\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n\n//get single product\nexport const getProduct = (productId) => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\",\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    }).then(response => {\n        return response.json();\n    }).catch(err => console.log(err));\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\n\n\nconst Orders = () => {\n  const [orders, setOrders] = useState([]);\n  const [statusValues, setStatusValues] = useState([]);\n\n  const {user, token} = isAuthenticated();\n\n  const loadOrders = () => {\n      listOrders(user._id, token).then(data => {\n        if(data.error){\n          console.log(data.error);\n        } else {\n          setOrders(data);\n        }\n      });\n  };\n\n  const loadStatusValues = () => {\n      getStatusValues(user._id, token).then(data => {\n        if(data.error){\n          console.log(data.error);\n        } else {\n          setStatusValues(data);\n        }\n      });\n  };\n\n  useEffect(() => {\n    loadOrders();\n    loadStatusValues();\n  }, []);\n\n  const ShowOrdersLength = () => {\n    if(orders.length > 0){\n      return (\n        <h1 className=\"text-danger display-2\">Total orders: {orders.length}</h1>\n      )\n    } else {\n      return <h1 className=\"text-danger\">No Orders</h1>\n    }\n  };\n\n  const showInput = (key, value) => (\n    <div className=\"input-group mb-2 mr-sm-2\">\n      <div className=\"input-group-prepend\">\n        <div className=\"input-group-text\">{key}</div>\n      </div>\n      <input type=\"text\" value={value} className=\"form-control\" readOnly />\n    </div>\n  )\n\n  const handleStatusChange = (e, orderId) => {\n    updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n      if(data.error){\n          console.log(\"failed to update status\");\n      } else {\n          loadOrders()\n      }\n    })\n  }\n\n  const showStatus = (o) => (\n    <div className=\"form-group\">\n      <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n      <select className=\"form-control\" onChange={e => handleStatusChange(e, o._id)}>\n        <option>Update Status</option>\n          {statusValues.map((status, index) => (\n            <option key={index} value={status}>\n              {status}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n\n  return (\n      <Layout title=\"Orders\"\n              description={`Hey ${user.name}, manage orders here`}>\n          <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3\">\n                  {ShowOrdersLength()}\n                  {orders.map((o, oIndex) => {\n                    return (\n                      <div className=\"mt-5\" key={oIndex} style={{borderBottom: \"5px solid indigo\"}}>\n                        <h2 className=\"mb-5\">\n                          <span>Order ID: {o._id}</span>\n                        </h2>\n                        <ul className=\"list-group mb-2\">\n                          <li className=\"list-group-item\"> {showStatus(o)}</li>\n                          <li className=\"list-group-item\">Transaction ID: {o.transaction_id}</li>\n                          <li className=\"list-group-item\">Amount: ${o.amount}</li>\n                          <li className=\"list-group-item\">Ordered By: {o.user.name}</li>\n                          <li className=\"list-group-item\">Ordered on: {o.createdAt}</li>\n                          <li className=\"list-group-item\">Shipping Address: {o.address}</li>\n                        </ul>\n                        <h3 className=\"mt-4 mb-4 font-italic\">\n                          Total product(s) in the order: {o.products.length}\n                        </h3>\n                        {o.products.map((p, pIndex) => (\n                          <div className=\"mb-4\" key={pIndex} style={{padding:\"10px\", border:\"2px solid indigo\"}}>\n                            {showInput(\"Product Name\", p.name)}\n                            {showInput(\"Product Price\", p.price)}\n                            {showInput(\"Product Total\", p.count)}\n                            {showInput(\"Product Id\", p._id)}\n                          </div>\n                        ))}\n                      </div>\n                    )\n                  })}\n              </div>\n          </div>\n      </Layout>\n  )\n\n}\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory} from \"./apiAdmin\";\n\nconst AddCategory = () => {\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    //destructure user and token from local storage\n    const {user, token} = isAuthenticated();\n\n    const handleChange = (e) => {\n        setError(\"\");\n        setName(e.target.value);\n    }\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        //make request to API to create category\n        createCategory(user._id, token, {name})\n            .then(data => {\n                if(data.error){\n                    setError(true);\n                } else {\n                    setError(false);\n                    setSuccess(true);\n                }\n            });\n    }\n\n    const showSuccess = () => {\n        if(success){\n            return <h3 className=\"text-success\">{name} is created</h3>\n        }\n    }\n\n    const showError = () => {\n        if(error){\n            return <h3 className=\"text-danger\"> Category name should be unique</h3>\n        }\n    }\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\n                Back to dashboard\n            </Link>\n        </div>\n    )\n\n    const newCategoryForm = () => (\n      <form onSubmit={clickSubmit}>\n          <div className=\"form-group\">\n              <label>Name</label>\n              <input type=\"text\"\n                     className=\"form-control\"\n                     onChange={handleChange}\n                     value={name}\n                     autoFocus\n                     required\n              />\n          </div>\n          <button className=\"btn btn-outline-primary\">Create Category</button>\n      </form>\n    );\n\n    return (\n        <Layout title=\"Add a New Category\"\n                description={`Hey ${user.name}, let's make a new category`}>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    {showSuccess()}\n                    {showError()}\n                    {newCategoryForm()}\n                </div>\n            </div>\n            {goBack()}\n        </Layout>\n    )\n}\n\nexport default AddCategory;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createProduct, getCategories} from \"./apiAdmin\";\n\n\nconst AddProduct = () => {\n    const { user, token } = isAuthenticated();\n    const [values, setValues] = useState({\n        name: \"\",\n        description: \"\",\n        price: \"\",\n        categories: [],\n        category: \"\",\n        shipping: \"\",\n        quantity: \"\",\n        photo: \"\",\n        loading: false,\n        error: \"\",\n        createdProduct: \"\",\n        redirectToProfile: \"\",\n        formData: \"\"\n    })\n\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    //load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if(data.error){\n                setValues({...values, error: data.error})\n            } else {\n                setValues({...values, categories: data, formData: new FormData()})\n            }\n        })\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n        formData.set(name, value)\n        setValues({...values, [name]: value});\n    }\n\n    const clickSubmit = (event) => {\n        event.preventDefault();\n        setValues({...values, error: \"\", loading: true})\n        createProduct(user._id, token, formData)\n            .then(data => {\n                if(data.error){\n                    setValues({...values, error: data.error})\n                } else {\n                    setValues({\n                        ...values,\n                        name: \"\",\n                        description: \"\",\n                        photo:\"\",\n                        price: \"\",\n                        quantity: \"\",\n                        loading: false,\n                        createdProduct: data.name\n                    });\n                }\n            })\n    }\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                <input onChange={handleChange(\"photo\")} type=\"file\" name=\"photo\" accept=\"image/*\" /></label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Name</label>\n                <input onChange={handleChange(\"name\")} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Description</label>\n                <textarea onChange={handleChange(\"description\")} type=\"text\" className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Price</label>\n                <input onChange={handleChange(\"price\")} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Category</label>\n                <select onChange={handleChange(\"category\")} className=\"form-control\">\n                    <option>select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                        <option key={i} value={c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Quantity</label>\n                <input onChange={handleChange(\"quantity\")} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Shipping</label>\n                <select onChange={handleChange(\"shipping\")} className=\"form-control\">\n                    <option>select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n\n        </form>\n    )\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\n            {error}\n        </div>\n    )\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{display: createdProduct ? \"\" : \"none\"}}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    )\n\n    const showLoading = () => (\n        loading && (\n            <div className=\"alert alert-success\">Loading...</div>\n        )\n    )\n\n    return (\n        <Layout title=\"Add a New Product\"\n                description={`Hey ${user.name}, let's make a new product`}>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default AddProduct;\n","import React, { useState, useEffect } from \"react\";\n\nconst Checkbox = ({categories, handleFilters}) => {\n    const [checked, setChecked] = useState([]);\n\n    const handleToggle = c => () => {\n        // returns first index or -1 if not checked\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked]; // everything in state\n        // toggle\n        if(currentCategoryId === -1){\n            newCheckedCategoryId.push(c)\n        } else{\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        // console.log(newCheckedCategoryId);\n        setChecked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    }\n\n\n    return categories.map((c,i) => (\n        <li key ={i} className=\"list-unstyled\">\n            <input\n                onChange={handleToggle(c._id)}\n                value={checked.indexOf(c._id === -1)}\n                type=\"checkbox\"\n                className=\"form-check-input\"\n            />\n\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ))\n}\nexport default Checkbox;\n","import React, { useState, useEffect, Fragment} from \"react\";\n\nconst Radiobox = ({ prices, handleFilters }) => {\n    const [value, setValue] =useState(0);\n\n    const handleChange = (event) => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    }\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ))\n}\n\nexport default Radiobox;\n","export const prices = [\n    {\n        _id: 0,\n        name: \"Any\",\n        array: []\n    },\n    {\n        _id: 1,\n        name: \"$0-$50\",\n        array: [0,50]\n    },\n    {\n        _id: 2,\n        name: \"$51-100\",\n        array: [51, 100]\n    }\n]\n","import React, { useState, useEffect } from 'react';\nimport Layout from \"./Layout\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport Radiobox from \"./Radiobox\";\nimport { prices } from \"./FixedPrices\";\nimport Card from \"./Card\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters:{ category : [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if(data.error){\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        //console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if(data.error){\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        })\n    };\n\n    const loadMore= () => {\n        let toSkip = skip + limit\n        //console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if(data.error){\n                setError(data.error);\n            } else {\n                setFilteredResults([... filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        })\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 && size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load More\n                </button>\n            )\n        )\n    }\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filteredBy) => {\n        //console.log(\"SHOP\", filters, filteredBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filteredBy] = filters;\n\n        if(filteredBy == \"price\"){\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filteredBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    }\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n        for(let key in data) {\n            if(data[key]._id === parseInt(value)){\n                array = data[key].array;\n            }\n        }\n        return array;\n    }\n\n    return (\n        // <Layout title= \"Home Page\"\n        //         description=\"Get dripped CAWMly\"\n        //         className=\"container-fluid\"\n        // >\n            <div className=\"row ml-2 mr-4 mt-4\">\n                <div className=\"col-2 mr-4\">\n                    <h4>Categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")} />\n                    </ul>\n                    <h4>Prices</h4>\n                    <div>\n                        <Radiobox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")} />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">SHOWROOM</h2>\n                    <div className=\"row ml-4\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n    )\n}\n\nexport default Shop;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { read } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Product = (props) => {\n    const [product, setProduct] = useState({});\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if(data.error){\n                setError(data.error);\n            } else {\n                setProduct(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, []);\n\n    return (\n        <Layout title={product && product.name}\n                description={product && product.description }\n                className=\"container-fluid\">\n\n            <h2 className=\"mb-4\">Single Product</h2>\n            <div className=\"row\">\n                {\n                    product && product.description && (\n                        <Card product={product} showViewProductButton={false} />\n                    )\n                }\n            </div>\n        </Layout>\n    )\n}\n\nexport default Product;\n","import React, {useState} from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ShowImage from \"./ShowImage\";\nimport { addItem, updateItem, removeItem } from \"./CartHelper\";\nimport \"./cartCard.module.css\";\nconst CartCard = ({\n                  product,\n                  showViewProductButton = true,\n                  showAddToCartButton = true,\n                  cartUpdate = false,\n                  showRemoveProductButton = false,\n                  setRun = f => f, //default value of function\n                  run = undefined\n  }) => {\n    const [redirect, setRedirect] = useState(false);\n    const [count, setCount] = useState(product.count);\n\n    const showViewButton = (showViewProductButton) => {\n        return (\n            showViewProductButton && (\n                <Link to={`/product/${product._id}`} className=\"mr-2\">\n                <button className=\"btn btn-outline-primary mt-2 mb-2\">\n                    View Product\n                </button>\n                </Link>\n            )\n        )\n    }\n\n    const addToCart = () => {\n        addItem(product, () => {\n            setRedirect(true);\n        })\n    }\n\n    const shouldRedirect = redirect => {\n        if(redirect){\n            return <Redirect to=\"/cart\" />\n        }\n    }\n\n    const showAddToCart = (showAddToCartButton) => {\n        return  showAddToCartButton && (\n            <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\n                Add to Cart\n            </button>\n        )\n    }\n\n    const showRemoveButton = showRemoveProductButton => {\n        return (\n            showRemoveProductButton && (\n            <button\n                onClick={() => {\n                    removeItem(product._id)\n                    setRun(!run); //run useEffect in parent Cart\n                }}\n                className=\"btn btn-outline-danger mt-2 mb-2\"\n            >\n                Remove Product\n            </button>\n            )\n        );\n    };\n\n    const handleChange = productId => event => {\n        setRun(!run)\n        setCount(event.target.value < 1 ? 1 : event.target.value);\n        if(event.target.value >= 1){\n            updateItem(productId, event.target.value)\n        }\n    }\n\n    const showCartUpdateOptions = cartUpdate => {\n        return cartUpdate &&\n            <div>\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Quantity\n                        </span>\n                    </div>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        value={ count }\n                        onChange={handleChange(product._id)} />\n                </div>\n            </div>\n    }\n\n    return (\n      <div class=\"card mb-4 p-2\">\n        <div className=\"row\">\n          <div class=\"col-4\">\n            <ShowImage item={product} url=\"products\" />\n            {showViewButton(showViewProductButton)}\n          </div>\n          <div className=\"col-md-8 px-3\">\n            <div className=\"card-block px-3\">\n              <p style={{fontFamily:\"alata\", fontSize: \"20px\"}}>{product.description.substring(0, 100)}</p>\n              <p style={{fontFamily:\"alata\", fontSize: \"20px\"}}>${product.price}</p>\n              {showAddToCart(showAddToCartButton)}\n              {showRemoveButton(showRemoveProductButton)}\n              {showCartUpdateOptions(cartUpdate)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default CartCard;\n","import React, {useState, useEffect} from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport {getProducts, getBraintreeClientToken, processPayment, createOrder} from \"./apiCore\";\nimport { Link , Redirect} from \"react-router-dom\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport {emptyCart} from \"./CartHelper\";\n\n\nconst Checkout = ({ products }) => {\n    const [data, setData] = useState({\n      success: false,\n      clientToken: null,\n      error: \"\",\n      instance: {},\n      address: \"\"\n    });\n\n    const [redirect, setRedirect] = useState(false);\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n      getBraintreeClientToken(userId, token).then(data => {\n        if(data.error){\n          setData({...data, error: data.error})\n        } else {\n          setData({ clientToken: data.clientToken})\n        }\n      })\n    };\n\n    useEffect(() => {\n      getToken(userId, token);\n    }, []);\n\n\n    const handleAddress = event => {\n      setData({...data, address: event.target.value});\n    }\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0)\n    }\n\n    const showCheckout = () => {\n        return  isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n              <button className=\"bth btn-primary\">Sign in to Checkout</button>\n            </Link>\n        )\n    }\n\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n      // send nonce(data.instance.requestPaymentMehtod()) to server\n      let nonce;\n      let getNonce = data.instance\n        .requestPaymentMethod()\n        .then(data => {\n          //console.log(data);\n          nonce = data.nonce;\n          // nonce is card info, send it to backend as pamentMethod nonce and charge Total\n          //console.log(\"send nonce\", nonce, getTotal(products))\n          const paymentData = {\n            paymentMethodNonce: nonce ,\n            amount: getTotal(products)\n          }\n\n          processPayment(userId, token, paymentData)\n            .then(response => {\n              const createOrderData = {\n                products: products,\n                transaction_id: response.transaction.id,\n                amount: response.transaction.amount,\n                address: deliveryAddress\n              };\n\n              createOrder(userId, token, createOrderData)\n                .then(response => {\n                  //setData({...data, success: response.success});\n                  emptyCart(() => {\n                    console.log(\"Payment was successful. Cart is now empty\");\n                    setRedirect(true);\n                  });\n              })\n                .catch(error => console.log(error));\n            })\n            .catch(error => console.log(error));\n        }).catch(error => {\n          //console.log(\"dropin error: \", error);\n          setData({...data, error: error.message});\n        })\n    }\n\n    const shouldRedirect = redirect => {\n        if(redirect){\n            return <Redirect to=\"/\" />\n        }\n    }\n\n    const showError = error => (\n      <div className=\"alert alert-danger\"\n      style={{display: error ? \"\" : \"none\"}}>\n        {error}\n      </div>\n    );\n\n    const showSuccess = success => (\n      <div className=\"alert alert-info\"\n          style={{display: success ? \"\" : \"none\"}}>\n            Thank you for making your purchase!\n            {shouldRedirect(redirect)}\n      </div>\n    );\n\n    const showDropIn = () => (\n      <div onBlur={() => setData({...data, error: \"\"})}>\n        {data.clientToken !== null && products.length > 0 ? (\n          <div>\n            <div className=\"gorm-group mb-3\">\n              <label className=\"text-muted\">Delivery address:</label>\n              <textarea onChange={handleAddress} className=\"form-control\" value={data.address} placeholder=\"Type your delivery address here...\" />\n            </div>\n            <DropIn options={{\n              authorization: data.clientToken\n            }} onInstance={instance => (data.instance = instance)} />\n            <button onClick={buy} className=\"btn btn-success\"> Pay </button>\n          </div>\n        ) : null}\n      </div>\n    )\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    )\n}\n\nexport default Checkout;\n","import React, { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport { getCart } from \"./CartHelper\";\nimport CartCard from \"./CartCard\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = () => {\n    const [ items, setItems] = useState([]);\n    const [ run, setRun] = useState(false);\n\n    useEffect(() => {\n        setItems(getCart())\n    }, [run]);\n\n    const showItems = items => {\n        return (\n            <div>\n                {items.map((product, i) => (\n                    <CartCard\n                        key={i}\n                        product={product}\n                        showAddToCartButton={false}\n                        cartUpdate={true}\n                        showRemoveProductButton={true}\n                        setRun={setRun}\n                        run={run}\n                    />\n                ))}\n            </div>\n        )\n    }\n\n    const emptyCartMessage = () => (\n        <h2>Nada . Zilch . Nothing Here Brokey... Go <Link to=\"/shop\">Shop</Link> </h2>\n    )\n\n    return (\n      <div className=\"row\" style={{width: \"100%\"}}>\n        <div className=\"col-6\">\n          <h2 style={{margin: \"4% 0 4% 7%\"}}>Your cart has {`${items.length}`} items</h2>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\" style={{marginLeft: \"4%\"}}>\n            {items.length > 0 ? showItems(items) : emptyCartMessage()}\n            </div>\n          <div className=\"col-2\" style={{marginLeft: \"4%\"}}>\n            <Checkout products={items}/>\n            <hr />\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Cart;\n","import React from 'react';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\nimport { API } from \"../config\";\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        // Include any additional collected billing details.\n        name: 'Jenny Rosen',\n      },\n    });\n\n    handlePaymentMethodResult(result);\n  };\n\n  const handlePaymentMethodResult = async (result) => {\n    if (result.error) {\n      // An error happened when collecting card details,\n      // show `result.error.message` in the payment form.\n    } else {\n      // Otherwise send paymentMethod.id to your server (see Step 3)\n      const response = await fetch(`${API}/create-payment-intent`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          payment_method_id: result.paymentMethod.id,\n        }),\n      });\n\n      const serverResponse = await response.json();\n\n      handleServerResponse(serverResponse);\n    }\n  };\n\n  const handleServerResponse = (serverResponse) => {\n    if (serverResponse.error) {\n      // An error happened when charging the card,\n      // show the error in the payment form.\n    } else {\n      // Show a success message\n    }\n  };\n\n  const handleCardChange = (event) => {\n    if (event.error) {\n      // Show `event.error.message` in the payment form.\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement onChange={handleCardChange} />\n      <button type=\"submit\" disabled={!stripe}>\n        Submit Payment\n      </button>\n    </form>\n  );\n}\n\nexport default CheckoutForm;\n","import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"./CheckoutForm\";\n\nconst stripePromise = loadStripe(\"pk_test_51HFkQ0IFcvkXcXgpkNTb2mrV6oL7p298DeISPtu6wpmHneylUGzfHFuULHw0HvQlhEcchgdMxqIMV2pdSs1PKUca00kIW0GfCe\");\n\nconst Payment = () => {\n    return (\n        <Elements stripe={stripePromise}>\n          <CheckoutForm />\n        </Elements>\n    )\n};\n\nexport default Payment;\n","import React, {useState, useEffect} from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({match}) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: false,\n    success: false\n  })\n\n  const {token} = isAuthenticated();\n\n  const {name, email, password, error, success} = values;\n\n  const init = userId => {\n    console.log(userId);\n    read(userId, token).then(data => {\n      if(data.error){\n        setValues({...values, error: true})\n      } else {\n          setValues({...values, name: data.name, email: data.email})\n      }\n    })\n  }\n\n  useEffect(() => {\n    init(match.params.userId)\n  }, []);\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(match.params.userId, token, {name, email, password}).then(data => {\n      if(data.error){\n        console.log(data.error)\n      } else {\n          updateUser(data, () => {\n            setValues({...values, name: data.name, email: data.email, success: true});\n          });\n        }\n      }\n    );\n  };\n\n  const redirectUser = success => {\n    if(success){\n      return <Redirect to=\"/user/dashboard\" />\n    }\n  }\n\n  const handleChange = name => e => {\n    setValues({...values, error: false, [name]: e.target.value});\n  }\n\n  const profileUpdate = (name, email, password) => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Name</label>\n        <input type=\"text\" onChange={handleChange(\"name\")} className=\"from-control\" value={name} />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Email</label>\n        <input type=\"email\" onChange={handleChange(\"email\")} className=\"from-control\" value={email} />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Password</label>\n        <input type=\"password\" onChange={handleChange(\"password\")} className=\"from-control\" value={password} />\n      </div>\n\n      <button onClick={clickSubmit} className=\"btn btn-primary\">Update</button>\n    </form>\n  )\n\n  return (\n    <Layout title=\"Profile\" description=\"update your profile\">\n      <h2> Profile Update </h2>\n      {profileUpdate(name, email, password)}\n      {redirectUser(success)}\n    </Layout>\n  )\n}\n\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\n\nconst ManageProducts = () => {\n  const [products, setProducts] = useState([]);\n  const {user, token} = isAuthenticated();\n\n  const loadProducts = () => {\n    getProducts().then(data => {\n      if(data.error){\n        console.log(data.error)\n      } else {\n        setProducts(data)\n      }\n    })\n  }\n\n  const destroy = productId => {\n    deleteProduct(productId, user._id, token).then(data => {\n      if(data.error){\n        console.log(data.error)\n      } else{\n        loadProducts()\n      }\n    })\n  }\n\n  useEffect(() => {\n    loadProducts()\n  }, []);\n\n\n  return (\n    <Layout title=\"Manage Products\" description=\"CRUD on Products\" className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n        <h2>Total Products: {products.length}</h2>\n        <hr/>\n          <ul className=\"list-group\">\n            {products.map((p, i) => (\n              <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                <strong>{p.name}</strong>\n                <Link to={`/admin/product/update/${p._id}`}>\n                  <span className=\"badge badge-warning badge-pill\"> Update </span>\n                </Link>\n                <span onClick={() => destroy(p._id)} className=\" badge badge-danger badge-pill\"> Delete </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default ManageProducts;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getProduct, getCategories, updateProduct } from \"./apiAdmin\";\n\n\nconst UpdateProduct = ({match}) => {\n    const { user, token } = isAuthenticated();\n    const [values, setValues] = useState({\n        name: \"\",\n        description: \"\",\n        price: \"\",\n        categories: [],\n        category: \"\",\n        shipping: \"\",\n        quantity: \"\",\n        photo: \"\",\n        loading: false,\n        error: \"\",\n        createdProduct: \"\",\n        redirectToProfile: \"\",\n        formData: \"\"\n    })\n\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    //load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if(data.error){\n                setValues({...values, error: data.error})\n            } else {\n                setValues({categories: data, formData: new FormData()})\n            }\n        })\n    }\n\n    const init = (productId) => {\n      getProduct(productId).then(data => {\n        if(data.error){\n          setValues({...values, error: data.error})\n        } else {\n          setValues({\n            ...values,\n            name: data.name,\n            description: data.description,\n            price: data.price,\n            category: data.category._id,\n            categories: data.categories,\n            shipping: data.shipping,\n            quantity: data.quantity,\n            formData: new FormData()\n          });\n          initCategories()\n        }\n      })\n    }\n\n\n\n    useEffect(() => {\n        init(match.params.productId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n        formData.set(name, value)\n        setValues({...values, [name]: value});\n    }\n\n    const clickSubmit = (event) => {\n        event.preventDefault();\n        setValues({...values, error: \"\", loading: true})\n        updateProduct(match.params.productId, user._id, token, formData)\n            .then(data => {\n                if(data.error){\n                    setValues({...values, error: data.error})\n                } else {\n                    setValues({\n                        ...values,\n                        name: \"\",\n                        description: \"\",\n                        photo:\"\",\n                        price: \"\",\n                        quantity: \"\",\n                        loading: false,\n                        error: false,\n                        redirectToProfile: true,\n                        createdProduct: data.name\n                    });\n                }\n            })\n    }\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                <input onChange={handleChange(\"photo\")} type=\"file\" name=\"photo\" accept=\"image/*\" /></label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Name</label>\n                <input onChange={handleChange(\"name\")} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Description</label>\n                <textarea onChange={handleChange(\"description\")} type=\"text\" className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Price</label>\n                <input onChange={handleChange(\"price\")} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Category</label>\n                <select onChange={handleChange(\"category\")} className=\"form-control\">\n                    <option>select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                        <option key={i} value={c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Quantity</label>\n                <input onChange={handleChange(\"quantity\")} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"\">Shipping</label>\n                <select onChange={handleChange(\"shipping\")} className=\"form-control\">\n                    <option>select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n\n        </form>\n    )\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\n            {error}\n        </div>\n    )\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{display: createdProduct ? \"\" : \"none\"}}>\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    )\n\n    const showLoading = () => (\n        loading && (\n            <div className=\"alert alert-success\">Loading...</div>\n        )\n    )\n\n    const redirectUser = () => {\n      if(redirectToProfile){\n        if(!error){\n          return <Redirect to=\"/admin/dashboard\" />\n        }\n      }\n    }\n\n    return (\n        <Layout title=\"Add a New Product\"\n                description={`Hey ${user.name}, let's make a new product`}>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default UpdateProduct;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport Home from './core/Home';\nimport Menu from './core/Menu';\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport Dashboard from \"./user/UserDashboard\";\nimport AdminDashboard from \"./user/AdminDashboard\";\nimport AdminRoute from \"./auth/AdminRoute\";\nimport Orders from \"./admin/Orders\";\nimport AddCategory from \"./admin/AddCategory\";\nimport AddProduct from \"./admin/AddProduct\";\nimport Shop from \"./core/Shop\";\nimport Product from \"./core/Product\";\nimport Cart from \"./core/Cart\";\nimport Payment from \"./core/Payment\";\nimport Profile from \"./user/Profile\";\nimport ManageProducts from \"./admin/ManageProducts\";\nimport UpdateProduct from \"./admin/UpdateProduct\";\n\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Menu />\n            <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/shop\" exact component={Shop}/>\n                <Route path=\"/signin\" exact component={Signin}/>\n                <Route path=\"/create-payment-intent\" exact component={Payment}/>\n                <Route path=\"/signup\" exact component={Signup}/>\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard}/>\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard}/>\n                <AdminRoute path=\"/create/category\" exact component={AddCategory}/>\n                <AdminRoute path=\"/create/product\" exact component={AddProduct}/>\n                <Route path=\"/product/:productId\" exact component={Product}/>\n                <Route path=\"/cart\" exact component={Cart}/>\n                <AdminRoute path=\"/admin/orders\" exact component={Orders}/>\n                <PrivateRoute path=\"/profile/:userId\" exact component={Profile}/>\n                <AdminRoute path=\"/admin/products\" exact component={ManageProducts}/>\n                <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct}/>\n            </Switch>\n        </BrowserRouter>\n    )\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n"],"sourceRoot":""}